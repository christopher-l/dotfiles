upstream hedgedoc {
    server 127.0.0.1:3000;
}
upstream miniflux {
    server 127.0.0.1:3010;
    keepalive 64;
}
upstream paperless {
    server 127.0.0.1:3020;
}
upstream webdav {
    server 127.0.0.1:3030;
}
upstream download {
    server 127.0.0.1:3040;
}

# Redirect all HTTP requests to HTTPS
server {
    listen     80 default_server;
    listen     [::]:80 default_server;
    return 301 https://$host$request_uri;
}

# Default server
server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    http2        on;
    server_name  e6.freeddns.org;

    return 404;

    ssl_certificate /etc/letsencrypt/live/e6.freeddns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/e6.freeddns.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# tcc-wg.duckdns.org
server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    http2        on;
    server_name  tcc-wg.duckdns.org;

    return 404;

    ssl_certificate /etc/letsencrypt/live/tcc-wg.duckdns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tcc-wg.duckdns.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}


# download.e6.freeddns.org
server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    http2        on;
    server_name  download.e6.freeddns.org;

    client_max_body_size 1024M;

    location / {
        proxy_pass http://download;
    }

    ssl_certificate /etc/letsencrypt/live/e6.freeddns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/e6.freeddns.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}


# Redirect download.tcc-wg.duckdns.org
server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    http2        on;
    server_name  download.tcc-wg.duckdns.org;

    return 301 https://download.e6.freeddns.org$request_uri;
    
    ssl_certificate /etc/letsencrypt/live/tcc-wg.duckdns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tcc-wg.duckdns.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}


# hedgedoc.e6.freeddns.org
server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    http2        on;
    server_name  hedgedoc.e6.freeddns.org;

    location / {
        proxy_pass http://hedgedoc;
        proxy_redirect off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;	
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
    }

    ssl_certificate /etc/letsencrypt/live/e6.freeddns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/e6.freeddns.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# Redirect hedgedoc.tcc-wg.duckdns.org
server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    http2        on;
    server_name  hedgedoc.tcc-wg.duckdns.org;

    return 301 https://hedgedoc.e6.freeddns.org$request_uri;
    
    ssl_certificate /etc/letsencrypt/live/tcc-wg.duckdns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tcc-wg.duckdns.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# miniflux.e6.freeddns.org
server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    http2        on;
    server_name  miniflux.e6.freeddns.org;

    location / {
        proxy_pass http://miniflux;
        proxy_redirect off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;	
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
    }

    ssl_certificate /etc/letsencrypt/live/e6.freeddns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/e6.freeddns.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# Redirect miniflux.tcc-wg.duckdns.org
server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    http2        on;
    server_name  miniflux.tcc-wg.duckdns.org;

    return 301 https://miniflux.e6.freeddns.org$request_uri;
    
    ssl_certificate /etc/letsencrypt/live/tcc-wg.duckdns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tcc-wg.duckdns.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# paperless.e6.freeddns.org
server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    http2        on;
    server_name  paperless.e6.freeddns.org;

    client_max_body_size 64M;

    location / {
        proxy_pass http://paperless;
        proxy_redirect off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;	
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
    }

    ssl_certificate /etc/letsencrypt/live/e6.freeddns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/e6.freeddns.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# Redirect paperless.tcc-wg.duckdns.org
server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    http2        on;
    server_name  paperless.tcc-wg.duckdns.org;

    return 301 https://paperless.e6.freeddns.org$request_uri;
    
    ssl_certificate /etc/letsencrypt/live/tcc-wg.duckdns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tcc-wg.duckdns.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# webdav.e6.freeddns.org
server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    http2        on;
    server_name  webdav.e6.freeddns.org;

    location / {
        proxy_pass http://webdav;
        proxy_redirect off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;	
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
    }

    ssl_certificate /etc/letsencrypt/live/e6.freeddns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/e6.freeddns.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# Redirect webdav.tcc-wg.duckdns.org
server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    http2        on;
    server_name  webdav.tcc-wg.duckdns.org;

    return 301 https://webdav.e6.freeddns.org$request_uri;
    
    ssl_certificate /etc/letsencrypt/live/tcc-wg.duckdns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tcc-wg.duckdns.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
