{
  // Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Log to the console": {
    "prefix": "log",
    "body": ["console.log($1)"],
    "description": "Log to the console"
  },
  "Tap": {
    "prefix": "tap",
    "body": ["tap(($1) => console.log('$1', $1)),"],
    "description": "Tap observable and log to console"
  },
  "Debug observable": {
    "prefix": "do",
    "body": [
      "subscribe({",
      "\tnext: (value) => console.log('next', value),",
      "\terror: (err) => console.log('error', err),",
      "\tcomplete: () => console.log('complete'),",
      "});"
    ],
    "description": "Subscribe and log observable actions"
  },
  "Unimplemented": {
    "prefix": "ni",
    "body": "throw new Error('not implemented')",
    "description": "Throw 'unimplemented' error"
  },
  "Timeout": {
    "prefix": "to",
    "body": ["setTimeout(() => {", "\t${TM_SELECTED_TEXT}$1", "});$0"]
  },
  "Jasmine test": {
    "prefix": "it",
    "body": ["it('$1', () => {", "\t$0", "});"],
    "description": ""
  },
  "Playwright test": {
    "prefix": "test",
    "body": ["test('$1', async ({ page }) => {", "\t$0", "});"]
  }
}
