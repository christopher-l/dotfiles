# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/gnome/Leaf.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

exec swayidle -w \
         timeout 900 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"'

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "type:keyboard" {
    repeat_delay 200
    repeat_rate 30
    xkb_options "caps:ctrl_modifier"
    xkb_layout "us"
    xkb_variant "altgr-intl"
}

### General settings

# Default layout
workspace_layout stacking
default_border none
hide_edge_borders --i3 smart
bindsym $mod+t border toggle
gaps inner 5
smart_gaps on

bindsym $mod+Escape workspace back_and_forth
workspace_auto_back_and_forth yes


### Workspaces
set $ws1 1: term
set $ws2 2: web
set $ws3 3: dev
set $ws4 4: debug
set $ws5 5: sec
set $ws6 6: misc
set $ws7 7: aux
set $ws8 8: doc
set $ws9 9: chat
set $ws10 10: music

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    bindsym $mod+Mod1+$left focus output left
    bindsym $mod+Mod1+$down focus output down
    bindsym $mod+Mod1+$up focus output up
    bindsym $mod+Mod1+$right focus output right

    bindsym $mod+Mod1+Left focus output left
    bindsym $mod+Mod1+Down focus output down
    bindsym $mod+Mod1+Up focus output up
    bindsym $mod+Mod1+Right focus output right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    bindsym $mod+Mod1+shift+$left move workspace to output left
    bindsym $mod+Mod1+shift+$down move workspace to output down
    bindsym $mod+Mod1+shift+$up move workspace to output up
    bindsym $mod+Mod1+shift+$right move workspace to output right

    bindsym $mod+Mod1+shift+Left move workspace to output left
    bindsym $mod+Mod1+shift+Down move workspace to output down
    bindsym $mod+Mod1+shift+Up move workspace to output up
    bindsym $mod+Mod1+shift+Right move workspace to output right

#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#
# Custom:
#
    # Launch applications
    bindsym Mod1+Space exec --no-startup-id ulauncher-toggle
    bindsym $mod+Shift+p exec --no-startup-id gnome-control-center
    bindsym $mod+Shift+s exec --no-startup-id gnome-control-center sound
    bindsym $mod+Shift+n exec --no-startup-id gnome-control-center network
    bindsym $mod+Shift+b exec --no-startup-id blueberry
    bindsym $mod+Shift+d exec --no-startup-id wdisplays
    bindsym $mod+Shift+t exec --no-startup-id ~/.local/bin/switch-theme.sh toggle
    bindsym Print exec --no-startup-id grim -g "$(slurp)" - | swappy -f -
    # Media keys
    bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym --no-repeat XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    # bindsym Pause exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    bindsym --no-repeat Ctrl+Pause exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    bindsym --no-repeat Pause exec pactl set-source-mute @DEFAULT_SOURCE@ false
    bindsym --no-repeat --release Pause exec pactl set-source-mute @DEFAULT_SOURCE@ true
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
    
#
# Workspaces assignments
#
assign [app_id="firefox"] → $ws2
assign [class="Chromium"] → $ws4
assign [app_id="org.keepassxc.KeePassXC"] → $ws7
assign [app_id="droidcam"] → $ws7
assign [class="Slack"] → $ws9

#
# Window rules
#
for_window [app_id="ulauncher"] border none
for_window [app_id="firefox" title="Firefox - Choose User Profile"] floating enable
for_window [app_id="xfce4-notifyd"] border none, move position 50ppt 0px, move left 50px
no_focus [app_id="xfce4-notifyd"]

#
# Startup applications
#
exec_always "systemctl --user import-environment; systemctl --user restart sway-session.target"
exec "ulauncher --hide-window"
# Enable NetworkManager to read secrets from the key chain
exec "nm-applet"
exec "blueberry-tray"
exec "easyeffects --gapplication-service"
exec "/usr/lib/deja-dup/deja-dup-monitor"
# Apply the GTK theme to XWayland applications
exec /usr/lib/gsd-xsettings
exec /usr/lib/geoclue-2.0/demos/agent

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
    swaybar_command waybar

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    colors {
        # statusline #ffffff
        # background #323232
        # inactive_workspace #32323200 #32323200 #5c5c5c
        # inactive_workspace #323232 #323232 #5c5c5c
    }
}

include /etc/sway/config.d/*